div(ng-controller="ChampionsCtrl" ng-show = "isActive('/champions')")
    .ui.connected.items
        div#switchViewButtonItem.item
            .fluid.ui.green.button(ng-click="switchView()") Switch View
            .fluid.ui.blue.button(ng-click="showHeroSelect = !showHeroSelect") Show Heroes
        .item
            div Search
            span.ui.mini.fluid.input
                input(type="text" placeholder="Hero Name" ng-model="searchQuery.name")
            span.ui.mini.fluid.input
                input(type="text" placeholder="2nd Hero To Compare" ng-model="searchQuery.name2")
            div
        div#heroLevelItem.item
            .ui.mini.fluid.input Hero Level
                input(type="number" placeholder="Enter Hero Level for Stats" ng-model="lvl")
        .item
            div(ng-class="{grey: !grid}") Sort
            span.ui.mini.fluid.input
                input(type="text" ng-show="grid" placeholder="Enter stat to sort by (default by name)" ng-model="sortKey")
            span.ui.black.small.button(ng-click="reverse()" ng-class="{disabled: !grid}") {{sortButton}}
            .ui.pointing.left.label(ng-show="grid") {{order}}

    .ui.mini.horizontal.list(ng-show="showHeroSelect")
        .item(ng-repeat="actor in champs track by actor.name" ng-click="selectHero(actor.playerData.playerDisplayName)")
            .ui.small.button(ng-class="heroButton(actor.playerData.playerDisplayName)") {{actor.playerData.playerDisplayName}}
    .ui.small.header(ng-show="!grid") Click on table headers to sort.
    .ui.small.blue.header(ng-show="grid") Click Hero avatar or blue headers to select Hero for Hero Builder
    .ui.small.blue.header(ng-show="!grid") Click Hero name to select Hero for Hero Builder
    .ui(ng-show="grid")
        .ui.champs#champitem(ng-repeat = "actor in champs  | filter:search | orderBy:getSortValue:reverseSort track by actor.name")
            .ui.center.aligned.five.column.celled.grid
                .row
                    .column#champheadercolumn
                        h4.ui.inverted.button.tiny.top.attached.header.champheader(ng-click="addBuild(actor)" ng-class="selectHeroBuild(actor.name)") {{actor.playerData.playerDisplayName}} | {{actor.attackType}} | {{actor.role1}} {{actor.role2}}
                .row
                    .column
                        img.rounded.ui.image(ng-src="{{avatarUrl(actor)}}" ng-click="addBuild(actor)")
                        .ui.tiny.blue.header Stats (Level {{lvl}})
                        .ui.mini.divided.list
                            .item(ng-repeat="(stat, conv) in convertTable track by stat" ng-if="!statsKeysExcludes[stat] && convertTable[stat]" title="{{stat}}")
                                    span {{conv}} :
                                    span.ui.tiny.header  {{perLevelV(stat, actor.actorStats)}} {{perLevel(stat, actor.actorStats)}}
                            .item
                                .content
                                    | collisionRadius :
                                    span.ui.tiny.header {{actor.collisionRadius}}
                    .column
                        .ui.mini.list
                            .ui.tiny.red.label (Q) {{actor.spell1.spellName}}
                            div
                                .ui {{actor.spell1.spellShortDescription}}
                                .item(ng-repeat="(stat, value) in actor.spell1 track by stat" ng-show="spellKeys[stat]")
                                    | {{spellKeys[stat]}} :
                                    span.ui.tiny.header  {{value}}
                    .column
                        .ui.mini.list
                            .ui.tiny.green.label (W) {{actor.spell2.spellName}}
                            div
                                .ui {{actor.spell2.spellShortDescription}}
                                .item(ng-repeat="(stat, value) in actor.spell2 track by stat" ng-show="spellKeys[stat]")
                                    | {{spellKeys[stat]}} :
                                    span.ui.tiny.header  {{value}}
                    .column
                        .ui.mini.list
                            .ui.tiny.white.label (E) {{actor.spell3.spellName}}
                            div
                                .ui {{actor.spell3.spellShortDescription}}
                                .item(ng-repeat="(stat, value) in actor.spell3 track by stat" ng-show="spellKeys[stat]")
                                    | {{spellKeys[stat]}} :
                                    span.ui.tiny.header  {{value}}
                    .column
                        .ui.mini.list
                            .ui.tiny.blue.label (Passive) {{actor.spell4.spellName}}
                            div
                                .ui {{actor.spell4.spellShortDescription}}
                                .item(ng-repeat="(stat, value) in actor.spell4 track by stat" ng-show="spellKeys[stat]")
                                    | {{spellKeys[stat]}} :
                                    span.ui.tiny.header  {{value}}


    table.ui.sortable.small.compact.table.segment(ng-if="!grid")
        thead
            tr
                th.ui.mini(ng-click="setTableSort()" ng-class="setTableClass()") Name
                th.ui.mini(ng-repeat="(stat, conv) in convertTable" ng-click="setTableSort(stat)" ng-class="setTableClass(stat)") {{conv}}
                th.ui.mini(ng-click="setTableSort('collisionRadius')" ng-class="setTableClass('collisionRadius')") Collision Radius
        tbody
            tr(ng-repeat="actor in champs  | orderBy:getSortValue:reverseSort |filter:search track by actor.name")
                td.ui.blue.tiny.header(ng-click="addBuild(actor)") {{actor.playerData.playerDisplayName}} lvl.{{lvl}}
                td(ng-repeat="(stat, conv) in convertTable") {{perLevelV(stat, actor.actorStats)}} {{perLevel(stat, actor.actorStats)}}
                td  {{actor.collisionRadius}}
